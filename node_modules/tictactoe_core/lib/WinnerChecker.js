'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _Base2 = require('./Base');

var _Base3 = _interopRequireDefault(_Base2);

var _Board = require('./Board');

var _Board2 = _interopRequireDefault(_Board);

var _ParameterValidation = require('./validation/ParameterValidation.js');

var _ParameterValidation2 = _interopRequireDefault(_ParameterValidation);

var _underscore = require('underscore');

var _underscore2 = _interopRequireDefault(_underscore);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var WinnerChecker = function (_Base) {
  _inherits(WinnerChecker, _Base);

  function WinnerChecker(board, id, numberToWin) {
    _classCallCheck(this, WinnerChecker);

    var _this = _possibleConstructorReturn(this, (WinnerChecker.__proto__ || Object.getPrototypeOf(WinnerChecker)).call(this));

    _this._id = id;
    _this._board = board;
    _this._numberToWin = numberToWin;
    _ParameterValidation2.default.validateType(board, _Board2.default, 'board');
    return _this;
  }

  _createClass(WinnerChecker, [{
    key: 'checkWinner',
    value: function checkWinner(x, y) {
      var _this2 = this;

      this._x = x;
      this._y = y;
      var counts = [this._checkUpDown(), this._checkLeftRight(), this._checkSlash(), this._checkBackSlash()];
      var winner = _underscore2.default.find(counts, function (num) {
        return num >= _this2._numberToWin;
      });
      return typeof winner !== 'undefined';
    }
  }, {
    key: '_checkUpDown',
    value: function _checkUpDown() {
      var x = this._x;
      var y = this._y;

      var upDownX = x;
      var upDownY = y;
      var upDownCount = 1;

      while (this._checkUp(upDownX, upDownY)) {
        upDownCount++;
        upDownY++;
      }

      upDownX = x;
      upDownY = y;

      while (this._checkDown(upDownX, upDownY)) {
        upDownCount++;
        upDownY--;
      }
      return upDownCount;
    }
  }, {
    key: '_checkUp',
    value: function _checkUp(x, y) {
      return this._check(x, y, 0, 1);
    }
  }, {
    key: '_checkDown',
    value: function _checkDown(x, y) {
      return this._check(x, y, 0, -1);
    }
  }, {
    key: '_checkLeftRight',
    value: function _checkLeftRight() {
      var x = this._x;
      var y = this._y;

      var leftRightX = x;
      var leftRightY = y;
      var leftRightCount = 1;

      while (this._checkRigth(leftRightX, leftRightY)) {
        leftRightCount++;
        leftRightX++;
      }

      leftRightX = x;
      leftRightY = y;

      while (this._checkLeft(leftRightX, leftRightY)) {
        leftRightCount++;
        leftRightX--;
      }
      return leftRightCount;
    }
  }, {
    key: '_checkLeft',
    value: function _checkLeft(x, y) {
      return this._check(x, y, -1, 0);
    }
  }, {
    key: '_checkRigth',
    value: function _checkRigth(x, y) {
      return this._check(x, y, 1, 0);
    }
  }, {
    key: '_checkSlash',
    value: function _checkSlash() {
      var x = this._x;
      var y = this._y;

      var slashX = x;
      var slashY = y;
      var slashCount = 1;

      while (this._checkSlashUp(slashX, slashY)) {
        slashCount++;
        slashY++;
        slashX++;
      }

      slashX = x;
      slashY = y;

      while (this._checkSlashDown(slashX, slashY)) {
        slashCount++;
        slashY--;
        slashX--;
      }
      return slashCount;
    }
  }, {
    key: '_checkSlashUp',
    value: function _checkSlashUp(x, y) {
      return this._check(x, y, 1, 1);
    }
  }, {
    key: '_checkSlashDown',
    value: function _checkSlashDown(x, y) {
      return this._check(x, y, -1, -1);
    }
  }, {
    key: '_checkBackSlash',
    value: function _checkBackSlash() {
      var x = this._x;
      var y = this._y;

      var backSlashX = x;
      var backSlashY = y;
      var backSlashCount = 1;

      while (this._checkBackSlashUp(backSlashX, backSlashY)) {
        backSlashCount++;
        backSlashY++;
        backSlashX--;
      }

      backSlashX = x;
      backSlashY = y;

      while (this._checkBackSlashDown(backSlashX, backSlashY)) {
        backSlashCount++;
        backSlashY--;
        backSlashX++;
      }
      return backSlashCount;
    }
  }, {
    key: '_checkBackSlashUp',
    value: function _checkBackSlashUp(x, y) {
      return this._check(x, y, -1, 1);
    }
  }, {
    key: '_checkBackSlashDown',
    value: function _checkBackSlashDown(x, y) {
      return this._check(x, y, 1, -1);
    }
  }, {
    key: '_check',
    value: function _check(x, y, directionX, directionY) {
      x += directionX;
      y += directionY;
      return this._board.getCell(x, y) === this._id;
    }
  }]);

  return WinnerChecker;
}(_Base3.default);

exports.default = WinnerChecker;
//# sourceMappingURL=data:application/json;base64,
//# sourceMappingURL=WinnerChecker.js.map