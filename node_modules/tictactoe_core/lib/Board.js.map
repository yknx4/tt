{"version":3,"sources":["../src/Board.js"],"names":["Board","width","height","_validateInput","_setupDimensions","_field","validateDimension","_width","_height","x","y","_xyIsOccupied","undefined","id","parseInt","_validatePosition","field","isUndefined","xIsInvalid","yIsInvalid","RangeError","Error","getCell","xExists","flatten","map","values","row","length"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;;;;;;IAEqBA,K;;;AAEnB,iBAAYC,KAAZ,EAAmBC,MAAnB,EAA2B;AAAA;;AAAA;;AAEzBD,YAAQA,SAAS,CAAjB;AACAC,aAASA,UAAUD,KAAnB;AACA,UAAKE,cAAL,CAAoBF,KAApB,EAA2BC,MAA3B;AACA,UAAKE,gBAAL,CAAsBH,KAAtB,EAA6BC,MAA7B;AACA,UAAKG,MAAL,GAAc,EAAd;AANyB;AAO1B;;;;mCAEcJ,K,EAAOC,M,EAAQ;AAC5B,oCAAoBI,iBAApB,CAAsCL,KAAtC,EAA6C,OAA7C;AACA,oCAAoBK,iBAApB,CAAsCJ,MAAtC,EAA8C,QAA9C;AACD;;;qCAEgBD,K,EAAOC,M,EAAQ;AAC9B,WAAKK,MAAL,GAAcN,KAAd;AACA,WAAKO,OAAL,GAAeN,MAAf;AACD;;;4BAUOO,C,EAAGC,C,EAAG;AACZ,UAAI,KAAKC,aAAL,CAAmBF,CAAnB,EAAsBC,CAAtB,CAAJ,EAA8B;AAC5B,eAAO,KAAKL,MAAL,CAAYI,CAAZ,EAAeC,CAAf,CAAP;AACD;AACD,aAAOE,SAAP;AACD;;;yBAEIC,E,EAAIJ,C,EAAGC,C,EAAG;AACbD,UAAIK,SAASL,CAAT,EAAY,EAAZ,CAAJ;AACAC,UAAII,SAASJ,CAAT,EAAY,EAAZ,CAAJ;AACA,WAAKK,iBAAL,CAAuBN,CAAvB,EAA0BC,CAA1B;;AAEA,UAAIM,QAAQ,KAAKX,MAAjB;;AAEA,UAAI,qBAAEY,WAAF,CAAcD,MAAMP,CAAN,CAAd,CAAJ,EAA6B;AAC3BO,cAAMP,CAAN,IAAW,EAAX;AACD;;AAEDO,YAAMP,CAAN,EAASC,CAAT,IAAcG,EAAd;AACD;;;sCAEiBJ,C,EAAGC,C,EAAG;AACtB,UAAIQ,aAAaT,KAAK,KAAKR,KAA3B;AACA,UAAIkB,aAAaT,KAAK,KAAKR,MAA3B;AACA,UAAIgB,cAAcC,UAAlB,EAA8B;AAC5B,cAAM,IAAIC,UAAJ,OAAmBX,CAAnB,SAAwBC,CAAxB,iCAAqD,KAAKT,KAA1D,SAAmE,KAAKC,MAAxE,OAAN;AACD;;AAED,UAAI,KAAKS,aAAL,CAAmBF,CAAnB,EAAsBC,CAAtB,CAAJ,EAA8B;AAC5B,cAAM,IAAIW,KAAJ,OAAcZ,CAAd,SAAmBC,CAAnB,8BAA4C,KAAKY,OAAL,CAAab,CAAb,EAAgBC,CAAhB,CAA5C,SAAN;AACD;AACF;;;kCAEaD,C,EAAGC,C,EAAG;AAClB,UAAIa,UAAU,CAAC,qBAAEN,WAAF,CAAc,KAAKZ,MAAL,CAAYI,CAAZ,CAAd,CAAf;AACA,aAAOc,WAAW,CAAC,qBAAEN,WAAF,CAAc,KAAKZ,MAAL,CAAYI,CAAZ,EAAeC,CAAf,CAAd,CAAnB;AACD;;;wBA5CW;AACV,aAAO,KAAKH,MAAZ;AACD;;;wBAEY;AACX,aAAO,KAAKC,OAAZ;AACD;;;wBAwCW;AACV,aAAO,qBAAEgB,OAAF,CAAU,qBAAEC,GAAF,CAAM,qBAAEC,MAAF,CAAS,KAAKrB,MAAd,CAAN,EAA6B,eAAO;AACnD,eAAO,qBAAEqB,MAAF,CAASC,GAAT,CAAP;AACD,OAFgB,CAAV,EAEHC,MAFJ;AAGD;;;;;;kBAvEkB5B,K","file":"Board.js","sourcesContent":["import Base from './Base'\nimport ParameterValidation from './validation/ParameterValidation.js'\nimport _ from 'underscore'\n\nexport default class Board extends Base {\n\n  constructor(width, height) {\n    super()\n    width = width || 3\n    height = height || width\n    this._validateInput(width, height)\n    this._setupDimensions(width, height)\n    this._field = {}\n  }\n\n  _validateInput(width, height) {\n    ParameterValidation.validateDimension(width, 'width')\n    ParameterValidation.validateDimension(height, 'height')\n  }\n\n  _setupDimensions(width, height) {\n    this._width = width\n    this._height = height\n  }\n\n  get width() {\n    return this._width\n  }\n\n  get height() {\n    return this._height\n  }\n\n  getCell(x, y) {\n    if (this._xyIsOccupied(x, y)) {\n      return this._field[x][y]\n    }\n    return undefined\n  }\n\n  play(id, x, y) {\n    x = parseInt(x, 10)\n    y = parseInt(y, 10)\n    this._validatePosition(x, y)\n\n    let field = this._field\n\n    if (_.isUndefined(field[x])) {\n      field[x] = {}\n    }\n\n    field[x][y] = id\n  }\n\n  _validatePosition(x, y) {\n    let xIsInvalid = x >= this.width\n    let yIsInvalid = y >= this.height\n    if (xIsInvalid || yIsInvalid) {\n      throw new RangeError(`(${x},${y}) is outside the field. (${this.width}x${this.height})`)\n    }\n\n    if (this._xyIsOccupied(x, y)) {\n      throw new Error(`(${x},${y}) is already set to '${this.getCell(x, y)}'.`)\n    }\n  }\n\n  _xyIsOccupied(x, y) {\n    let xExists = !_.isUndefined(this._field[x])\n    return xExists && !_.isUndefined(this._field[x][y])\n  }\n\n  get count() {\n    return _.flatten(_.map(_.values(this._field), row => {\n      return _.values(row)\n    })).length\n  }\n\n}\n"]}